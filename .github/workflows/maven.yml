name: Studadvice maven CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:


jobs:
  setup_and_compile:
    runs-on: ubuntu-latest
    steps:
      # Initialisation et Configuration
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Compilation
      - name: Compile with Maven
        run: mvn compile

  test:
    runs-on: ubuntu-latest
    needs: setup_and_compile
    steps:
      # Test
      - name: Test with Maven
        run: mvn test -DskipTests

  package_and_upload:
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Package
      - name: Package with Maven
        run: mvn package -DskipTests

      # Upload
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: studadvice
          path: target/studadvice-0.0.1-SNAPSHOT.jar

  code_coverage:
    if : github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: package_and_upload
    steps:
      # Code Coverage
      - name: Code Coverage with Maven
        run: mvn jacoco:report

      # Upload
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: code_coverage
          path: target/site/jacoco/index.html

  code_quality:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: package_and_upload
    steps:
      # Code Quality
      - name: Code Quality with Maven
        run: mvn sonar:sonar -Dsonar.projectKey=Studadvice -Dsonar.organization=studadvice -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}


  deploy_to_heroku:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: package_and_upload
    steps:
      # Deploy
      - name: Deploy to Heroku
        uses: akamai/action-heroku-deploy@v1.0.1
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "YOUR_HEROKU_APP_NAME"
          heroku_email: "YOUR_HEROKU_EMAIL"
